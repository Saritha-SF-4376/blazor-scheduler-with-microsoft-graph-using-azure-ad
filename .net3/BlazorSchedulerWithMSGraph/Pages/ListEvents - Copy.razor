@page "/listevents"
@inject IHttpClientFactory HttpClientFactory
@inject ITokenAcquisition TokenAcquisitionService

<SfSchedule TValue="AppointmentData" Height="750px" SelectedDate="new DateTime(2020,8,20)">
    <ScheduleEventSettings DataSource="@DataSource"></ScheduleEventSettings>
</SfSchedule>

@code
{
    private HttpClient httpClient;
    List<Calendar> AllCalendars = new List<Calendar>();
    List<AppointmentData> DataSource = new List<AppointmentData>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            httpClient = HttpClientFactory.CreateClient();
            var token = await TokenAcquisitionService.GetAccessTokenForUserAsync(new string[] { "Calendars.Read" });
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

            /////////////////// List Events ///////////////
            HttpResponseMessage getEvents = await httpClient.GetAsync("https://graph.microsoft.com/beta/me/calendar/events");
            if (getEvents.IsSuccessStatusCode)
            {
                string json = await getEvents.Content.ReadAsStringAsync();
                JObject result = JsonConvert.DeserializeObject(json) as JObject;

                foreach (JProperty child in result.Properties().Where(p => !p.Name.StartsWith("@")))
                {
                    AllCalendars = child.Value.ToObject<List<Calendar>>();
                    @foreach (var calendar in AllCalendars)
                    {
                        var appointment = new AppointmentData();
                        appointment.Subject = calendar.AdditionalData["subject"].ToString();
                        appointment.StartTime = (DateTime)JObject.Parse(calendar.AdditionalData["start"].ToString())["dateTime"];
                        appointment.EndTime = (DateTime)JObject.Parse(calendar.AdditionalData["end"].ToString())["dateTime"];
                        DataSource.Add(appointment);
                    }
                }
            }
        }
        catch (Exception ex)
        {
            throw ex.InnerException;
        }
    }

    public class AppointmentData
    {
        public string Subject { get; set; }
        public DateTime StartTime { get; set; }
        public DateTime EndTime { get; set; }
    }
}